---
- name: Gather the package facts
  ansible.builtin.package_facts:
    manager: auto
- name: Message check postgresql package
  debug:
    msg:
      - "postgresql package exist"
  when: "'postgresql' in ansible_facts.packages"
- name: Check if {{ postgresql_path }} exist
  stat:
    path: "{{ postgresql_path }}"
  register: postgresql_path_check
- name: Message check {{ postgresql_path }}
  debug:
    msg:
      - "{{ postgresql_path }} exist"
  when: 
    - postgresql_path_check.stat.exists
    - postgresql_path_check.stat.isdir
- name: Add line backup directory {{ postgresql_path }}
  blockinfile:
    path: /opt/backup-system.sh
    marker: "# Tuan backup postgresql config"
    insertafter: EOF
    block: |
      tar -czvf $BACKUP_RESTORE_PATH/$IP_SERVER-postgresql-$NOW.tar.gz -C {{ postgresql_path }} .
    state: present
  when:
    - "'postgresql' in ansible_facts.packages"
    - postgresql_path_check.stat.exists
    - postgresql_path_check.stat.isdir
- name: Dump database postgresql
  blockinfile:
    path: /opt/backup-system.sh
    marker: "# Tuan dump all database postgresql"
    insertafter: EOF
    block: |
      all_databases=$(sudo -u postgres psql -l -t | cut -d'|' -f1 | sed -e 's/ //g' -e '/^$/d')
      for db_name in $all_databases; do
          if [[ "$db_name" != "postgres" ]] && [[ "$db_name" != "template0" ]] && [[ "$db_name" != "template1" ]] && [[ "$db_name" != "freeswitch" ]] ; then
              sudo -u postgres pg_dump -Fc -Z1 -h 127.0.0.1 -d $db_name > $BACKUP_RESTORE_PATH/$IP_SERVER-db-$db_name-$NOW.tar.gz
          fi
      done
    state: present
  when:     
    - "'postgresql' in ansible_facts.packages"
    - postgresql_path_check.stat.exists
    - postgresql_path_check.stat.isdir
...