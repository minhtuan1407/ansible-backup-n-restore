---
- name: Check if postgresql package is exist with yum
  shell:
    cmd: yum list installed | grep postgresql
  register: postgresql_package_check
  failed_when: postgresql_package_check.rc not in [0, 1]
  when: ansible_distribution == 'CentOS'
- name: Check if postgresql package is exist with dpkg
  shell:
    cmd: dpkg -l | grep postgresql
  register: postgresql_package_check
  failed_when: postgresql_package_check.rc not in [0, 1]
  when: ansible_distribution == 'Debian'
- name: Message check postgresql package
  debug:
    msg:
      - "postgresql package exist"
  when: postgresql_package_check.rc == 0
- name: Check if postgresql path is exist
  shell:
    cmd: ls {{ postgresql_path }}
  register: postgresql_path_check
  failed_when: postgresql_path_check.rc not in [0, 1, 2]
- name: Message check postgresql path
  debug:
    msg:
      - "{{ postgresql_path }} exist"
  when: postgresql_path_check.rc == 0
- name: Add line backup directory {{ nginx_path }}
  blockinfile:
    path: /opt/backup-system.sh
    marker: "# Tuan backup postgresql config"
    insertafter: EOF
    block: |
      tar -czvf $BACKUP_RESTORE_PATH/$IP_SERVER-postgresql-$NOW.tar.gz -C {{ nginx_path }} .
    state: present
  when: postgresql_package_check.rc == 0 and postgresql_path_check.rc == 0
- name: Dump database postgresql
  blockinfile:
    path: /opt/backup-system.sh
    marker: "# Tuan dump all database postgresql"
    insertafter: EOF
    block: |
      all_databases=$(sudo -u postgres psql -l -t | cut -d'|' -f1 | sed -e 's/ //g' -e '/^$/d')
      for db_name in $all_databases; do
          if [[ "$db_name" != "postgres" ]] && [[ "$db_name" != "template0" ]] && [[ "$db_name" != "template1" ]] ; then
              sudo -u postgres pg_dump -Fc -Z1 -h 127.0.0.1 -d $db_name > $BACKUP_RESTORE_PATH/$IP_SERVER-db-$db_name-$NOW.tar.gz
          fi
      done
    state: present
  when: postgresql_package_check.rc == 0 and postgresql_path_check.rc == 0
...