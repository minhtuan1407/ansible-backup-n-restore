---
- name: Check if mariadb package is exist with yum
  shell:
    cmd: yum list installed | grep mariadb-server
  register: mariadb_package_check
  failed_when: mariadb_package_check.rc not in [0, 1]
  when: ansible_distribution == 'CentOS'
- name: Check if mariadb package is exist with dpkg
  shell:
    cmd: dpkg -l | grep mariadb-server
  register: mariadb_package_check
  failed_when: mariadb_package_check.rc not in [0, 1]
  when: ansible_distribution == 'Debian'
- name: Message check mariadb package
  debug:
    msg:
      - "mariadb package exist"
  when: mariadb_package_check.rc == 0
- name: Check if mariadb path is exist
  shell:
    cmd: ls {{ mariadb_path }}
  register: mariadb_path_check
  failed_when: mariadb_path_check.rc not in [0, 1, 2]
- name: Message check mariadb path
  debug:
    msg:
      - "{{ mariadb_path }} exist"
  when: mariadb_path_check.rc == 0
- name: Add line backup directory {{ mariadb_path }}
  blockinfile:
    path: /opt/backup-system.sh
    marker: "# Tuan backup mariadb config"
    insertafter: EOF
    block: |
      tar -czvf $BACKUP_RESTORE_PATH/$IP_SERVER-mariadb-$NOW.tar.gz -C {{ mariadb_path }} .
    state: present
  when: mariadb_package_check.rc == 0 and mariadb_path_check.rc == 0
- name: Dump database mariadb
  blockinfile:
    path: /opt/backup-system.sh
    marker: "# Tuan dump all database mariadb"
    insertafter: EOF
    block: |
      all_databases=$(mysql -u "$USER" -p"$PASSWORD" -e "SHOW DATABASES;" | tr -d "| " | grep -v Database)
      for db_name in $all_databases; do
          if [[ "$db_name" != "mysql" ]] && [[ "$db_name" != "performance_schema" ]] && [[ "$db_name" != "information_schema" ]] && [[ "$db_name" != _* ]] ; then
              mysqldump -u "$DB_USER" -p"$DB_PASS" --routines --triggers  --databases $db_name | gzip > $BACKUP_RESTORE_PATH/$IP_SERVER-db-$db_name-$NOW.sql.gz
          fi
      done
    state: present
  when: mariadb_package_check.rc == 0 and mariadb_path_check.rc == 0 and db_user != '' and db_pass != ''
...